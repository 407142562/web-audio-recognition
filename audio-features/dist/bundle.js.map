{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/eventemitter3/index.js","webpack:///./node_modules/fft.js/lib/fft.js","webpack:///./src/AudioUtils.ts","webpack:///./src/MelSpectrogram.ts","webpack:///./src/PlotGraphs.ts","webpack:///./src/StreamingFeatureExtractor.ts","webpack:///./src/index.ts","webpack:///./src/worklet/MelSpectrogramNode.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;ACnEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yDAAyD,OAAO;AAChE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,eAAe,YAAY;AAC3B;;AAEA;AACA,2DAA2D;AAC3D,+DAA+D;AAC/D,mEAAmE;AACnE,uEAAuE;AACvE;AACA,0DAA0D,SAAS;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,2DAA2D,YAAY;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/UA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,eAAe;AAChC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA,GAAG;AACH;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B;AACA;;AAEA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA,GAAG;AACH;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,eAAe;AACnC,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACzeA,MAAM,EAAE,GAAG,KAAK,CAAC;AAEjB,IAAI,aAAa,GAAG,IAAI,CAAC;AACzB,IAAI,OAAO,GAAG,IAAI,CAAC;AAEnB;IACE,MAAM,CAAC,iBAAiB;QACtB,OAAO,UAAU,CAAC,UAAU,CAAC,mCAAmC,CAAC,CAAC;IACpE,CAAC;IAED,MAAM,CAAC,cAAc;QACnB,OAAO,UAAU,CAAC,UAAU,CAAC,+BAA+B,CAAC,CAAC;IAChE,CAAC;IAED,MAAM,CAAC,UAAU,CAAC,GAAW;QAC3B,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC;SAC9B;QAED,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,MAAM,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;YACjC,0CAA0C;YAC1C,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YACrB,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE;gBAChB,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE;oBAC7C,OAAO,CAAC,MAAM,CAAC,CAAC;gBAClB,CAAC,CAAC;YACJ,CAAC,CAAC;YACF,GAAG,CAAC,YAAY,GAAG,aAAa,CAAC;YACjC,GAAG,CAAC,OAAO,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACnC,GAAG,CAAC,IAAI,EAAE,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAO,iBAAiB,CAAC,GAAW;;YACxC,MAAM,UAAU,GAAG,IAAI,mBAAmB,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YAC5D,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;iBAC/C,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;QACxD,CAAC;KAAA;IAED;;OAEG;IACH,MAAM,CAAC,GAAG,CAAC,CAAe;QACxB,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;;;OAKG;IACH,MAAM,CAAC,IAAI,CAAC,CAAe,EAAE,OAAO,GAAC,IAAI,EAAE,OAAO,GAAC,OAAO;QACxD,2DAA2D;QAC3D,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;QACnE,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;QACpE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YACpC,MAAM,GAAG,GAAG,CAAC,GAAG,OAAO,CAAC;YACxB,MAAM,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,OAAO,CAAC,CAAC;YAC3C,wEAAwE;YACxE,eAAe;YACf,IAAI,MAAM,CAAC,MAAM,IAAI,OAAO,EAAE;gBAC5B,SAAS;aACV;YAED,MAAM,GAAG,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACjD,MAAM,SAAS,GAAG,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACtD,MAAM,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACtC,sEAAsE;YACtE,qBAAqB;YACrB,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;SACtC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,cAAc,CAAC,YAA4B,EAChD,QAAQ,GAAC,EAAE,EAAE,KAAK,GAAC,GAAG,EAAE,MAAM,GAAC,IAAI,EAAE,EAAE,GAAC,EAAE;QAC1C,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;QAElF,8DAA8D;QAC9D,MAAM,GAAG,GAAG,EAAE,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,GAAG,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;SACrE;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,CAAC,uBAAuB,CAAC,MAAc,EAAE,QAAQ,GAAC,EAAE,EAAE,KAAK,GAAC,GAAG,EAAE,MAAM,GAAC,IAAI,EAAE,EAAE,GAAC,EAAE;QACvF,gCAAgC;QAChC,IAAI,CAAC,aAAa,IAAI,aAAa,CAAC,MAAM,IAAI,MAAM,EAAE;YACpD,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;SAC/E;IACH,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,OAAO,CAAC,CAAe;QAC5B,IAAI,GAAG,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACrC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACzC;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,WAAW,CAAC,CAAe;QAChC,IAAI,GAAG,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACrC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,GAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAChD;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,UAAU,CAAC,MAAc;QAC9B,IAAI,GAAG,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;QACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/D;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG;QAC5B,IAAI,MAAM,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,EAAE;YAC/B,OAAO,CAAC,KAAK,CAAC,iBAAiB,MAAM,CAAC,MAAM;UACxC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;YACnB,OAAO;SACR;QAED,IAAI,GAAG,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,CAAC,iBAAiB,CAAC,GAAiB,EACxC,MAAoB,EAAE,MAAoB;QAC1C,IAAI,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;YACjE,OAAO,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,MAAM;UACrC,MAAM,CAAC,MAAM,qBAAqB,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YACxD,OAAO;SACR;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;SAChC;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,QAAQ,GAAC,EAAE,EAAE,KAAK,GAAC,GAAG,EAAE,MAAM,GAAC,IAAI,EAAE,EAAE,GAAC,EAAE;QAC5E,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACnC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAErC,4EAA4E;QAC5E,WAAW;QACX,MAAM,IAAI,GAAG,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;QACxD,2BAA2B;QAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/C,kDAAkD;QAClD,MAAM,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;QAExD,yEAAyE;QACzE,0EAA0E;QAC1E,2DAA2D;QAC3D,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAC/B,MAAM,OAAO,GAAG,EAAE,CAAC;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,yCAAyC;YACzC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;SAC1E;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,eAAe,CAAC,WAAyB,EAAE,UAA0B;QAE1E,IAAI,WAAW,CAAC,MAAM,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;YAC9C,OAAO,CAAC,KAAK,CAAC;uBACG,WAAW,CAAC,MAAM,uBAAuB,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;YACnF,OAAO;SACR;QAED,8DAA8D;QAC9D,IAAI,GAAG,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,wEAAwE;YACxE,kBAAkB;YAClB,MAAM,GAAG,GAAG,UAAU,CAAC,WAAW,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/D,iDAAiD;YACjD,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;SAC9B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,EAAE;QACf,OAAO,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAC,GAAG,CAAC,CAAC;IACrC,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,GAAG;QAChB,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,GAAC,EAAE;QACnC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,GAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ;QAC3D,MAAM,GAAG,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;QACrC,MAAM,OAAO,GAAG,GAAG,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC,CAAC;QAC/C,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAC3C,oEAAoE;YACpE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,OAAO,CAAC;SACrC;QACD,MAAM,SAAS,GAAG,GAAG,GAAG,CAAC,QAAQ,GAAG,SAAS,CAAC,CAAC;QAC/C,KAAK,IAAI,CAAC,GAAG,SAAS,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;YACzC,oEAAoE;YACpE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,SAAS,CAAC;SAC1C;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,OAAO,GAAC,CAAC,EAAE,OAAO,GAAC,CAAC;QACpD,IAAI,GAAG,GAAG,QAAQ,CAAC;QACnB,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC;QACpB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC9B,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,GAAG,EAAE;oBACb,GAAG,GAAG,GAAG,CAAC;iBACX;gBACD,IAAI,GAAG,GAAG,GAAG,EAAE;oBACb,GAAG,GAAG,GAAG,CAAC;iBACX;aACF;SACF;QAED,MAAM,KAAK,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;QAChD,MAAM,MAAM,GAAG,OAAO,GAAG,GAAG,CAAC;QAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC9B,oCAAoC;gBACpC,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;gBAC9C,wCAAwC;gBACxC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,IAAI,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;aACnD;SACF;IACH,CAAC;IAED,MAAM,CAAC,mBAAmB,CAAC,MAAoB,EAAE,UAAmB;QAClE,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC;SAC9B;QACD,IAAI,CAAC,UAAU,EAAE;YACf,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;SACjC;QACD,MAAM,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QACvE,MAAM,eAAe,GAAG,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtD,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAE5B,MAAM,MAAM,GAAG,OAAO,CAAC,kBAAkB,EAAE,CAAC;QAC5C,MAAM,CAAC,MAAM,GAAG,WAAW,CAAC;QAC5B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;CAEF;AA9RD,6BA8RC;AAED,qBAAqB,KAAK,EAAE,GAAG,EAAE,KAAK;IACpC,MAAM,KAAK,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC9B,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;KAC5B;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAED,aAAa,KAAK;IAChB,OAAO,KAAK,CAAC,MAAM,CAAC,UAAS,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC;AAED,eAAe,KAAK;IAClB,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACb;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAED,wCAAwC;AACxC,MAAM,OAAO,GAAG,CAAC,EAAE,CAAC;AACpB,mBAAmB,GAAG;IACpB,+CAA+C;IAC/C,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACjC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC;AAChC,CAAC;AAED,kBAAyB,WAAwB,EAAE,QAAgB;IACjE,MAAM,QAAQ,GAAG,WAAW,CAAC,UAAU,CAAC;IACxC,MAAM,SAAS,GAAG,WAAW,CAAC,MAAM,GAAG,QAAQ,GAAC,QAAQ,CAAC;IACzD,MAAM,UAAU,GAAG,IAAI,mBAAmB,CAAC,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;IAEnE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,MAAM,YAAY,GAAG,UAAU,CAAC,kBAAkB,EAAE,CAAC;QACrD,YAAY,CAAC,MAAM,GAAG,WAAW,CAAC;QAClC,UAAU,CAAC,UAAU,GAAG,UAAS,KAAK;YACpC,MAAM,SAAS,GAAG,KAAK,CAAC,cAAc,CAAC;YACvC,MAAM,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC;YAC7B,wEAAwE;YACxE,OAAO,CAAC,SAAS,CAAC,CAAC;QACrB,CAAC;QACD,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAC7C,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,UAAU,CAAC,cAAc,EAAE,CAAC;IAC9B,CAAC,CAAC,CAAC;AACL,CAAC;AAlBD,4BAkBC;;;;;;;;;;;;;;;ACrWD,kFAA8B;AAsB9B,wBAA+B,IAAoB,EAAE,KAAa;IAChE,qFAAqF;IACrF,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IACnD,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IAChC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtB,CAAC;AALD,wCAKC;AAED,cAAqB,CAAe,EAAE,MAAkB;IACtD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC;IACjC,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,IAAI,CAAC;IAC3C,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;IAEhE,IAAI,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;IAEtC,yCAAyC;IACzC,SAAS,GAAG,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAE/C,uDAAuD;IACvD,CAAC,GAAG,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;IAExC,0BAA0B;IAC1B,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;IAC1C,yFAAyF;IAEzF,gCAAgC;IAChC,MAAM,UAAU,GAAG,EAAE,CAAC;IAEtB,MAAM,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC;IAC7B,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC;IACxB,oEAAoE;IAEpE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC9B,gDAAgD;QAChD,MAAM,GAAG,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;QACrC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;KACrB;IAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC9B,4BAA4B;QAC5B,MAAM,SAAS,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;QACrD,MAAM,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;QAC3B,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;KACzC;IAED,OAAO,UAAU,CAAC;AACpB,CAAC;AAtCD,oBAsCC;AAED,qBAA4B,CAAe,EAAE,MAAkB;IAC7D,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;QACjB,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;KAClB;IACD,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IACnC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,cAAc,CAAC,UAAU,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;IAC9D,OAAO,IAAI,CAAC;AACd,CAAC;AAPD,kCAOC;AAED,wBAA+B,CAAe,EAAE,MAAkB;IAChE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;QACjB,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC;KACpB;IACD,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IACnC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,cAAc,CAAC,UAAU,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;IAE9D,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,MAAM,QAAQ,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAC;IAC7C,OAAO,oBAAoB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AAC9C,CAAC;AAVD,wCAUC;AAED,8BAAqC,IAAoB,EAAE,UAA0B;IAEnF,8DAA8D;IAC9D,MAAM,GAAG,GAAoB,EAAE,CAAC;IAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,GAAG,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;KAC/C;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AARD,oDAQC;AAED,yBAAgC,IAAkB,EAAE,UAA0B;IAC5E,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;QACvC,MAAM,IAAI,KAAK,CAAC,kDAAkD;YAChE,0BAA0B,IAAI,CAAC,MAAM,IAAI;YACzC,qBAAqB,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;KACjD;IAED,8DAA8D;IAC9D,IAAI,GAAG,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC1C,wEAAwE;QACxE,kBAAkB;QAClB,MAAM,GAAG,GAAG,WAAW,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,+BAA+B;QAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KACnB;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAjBD,0CAiBC;AAED,qBAA4B,MAAM,EAAE,GAAG;IACrC,IAAI,MAAM,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,EAAE;QAC/B,OAAO,CAAC,KAAK,CAAC,iBAAiB,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;QAChF,OAAO;KACR;IAED,IAAI,GAAG,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;KAC7B;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAXD,kCAWC;AAED,2BAAkC,IAAkB,EAAE,MAAc;IAClE,wCAAwC;IACxC,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,EAAE;QACxB,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;KAChD;IAED,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3D,MAAM,YAAY,GAAG,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;IACxD,OAAO,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC,CAAC;AACxD,CAAC;AATD,8CASC;AAED,qBAA4B,IAAkB,EAAE,OAA0B;IACxE,IAAI,OAAO,EAAE,QAAQ,CAAC;IACtB,IAAI,OAAM,CAAC,OAAO,CAAC,IAAI,QAAQ,EAAE;QAC/B,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG,OAAO,CAAC;KAC/B;SAAM;QACL,OAAO,GAAG,QAAQ,GAAG,OAAO,CAAC;KAC9B;IACD,MAAM,GAAG,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,OAAO,GAAG,QAAQ,CAAC,CAAC;IAC/D,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACvB,OAAO,GAAG,CAAC;AACb,CAAC;AAVD,kCAUC;AAED,oBAA2B,IAAkB,EAAE,OAAe;IAC5D,MAAM,GAAG,GAAG,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;QAChC,2CAA2C;QAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAC,OAAO,GAAG,CAAC,CAAC,CAAC;QAC5B,qCAAqC;QACrC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,GAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;KAC/D;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AATD,gCASC;AAED;;;GAGG;AACH,eAAsB,IAAkB,EAAE,WAAmB,EAAE,SAAiB;IAC9E,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;IAC5E,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACzE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;QACpC,MAAM,GAAG,GAAG,CAAC,GAAG,SAAS,CAAC;QAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,WAAW,CAAC,CAAC;QAClD,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvB,wEAAwE;QACxE,eAAe;QACf,IAAI,MAAM,CAAC,MAAM,IAAI,WAAW,EAAE;YAChC,SAAS;SACV;KACF;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AAdD,sBAcC;AAED,6BAAoC,MAAiB;IACnD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC;IAC9B,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;IAClD,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,GAAG,CAAC;IAClC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC;IAEjC,iCAAiC;IACjC,MAAM,QAAQ,GAAG,iBAAiB,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IAC5D,0CAA0C;IAC1C,MAAM,QAAQ,GAAG,iBAAiB,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAE1D,MAAM,OAAO,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;IACvC,MAAM,KAAK,GAAG,aAAa,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAChD,MAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IAEnC,MAAM,OAAO,GAAG,EAAE,CAAC;IACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC9B,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC;QAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YACxC,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;YAC3C,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;YACnD,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;SACxB;KACF;IAED,uEAAuE;IACvE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACvC,+BAA+B;QAC/B,MAAM,KAAK,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,4BAA4B;QAC5B,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;KACjD;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;AAnCD,kDAmCC;AAED,aAAoB,CAAe;IACjC,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IAC9B,MAAM,GAAG,GAAG,GAAG,CAAC,kBAAkB,EAAE,CAAC;IACrC,MAAM,IAAI,GAAG,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACnC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACzB,OAAO,GAAG,CAAC;AACb,CAAC;AAND,kBAMC;AAED,oBAA2B,MAAc;IACvC,IAAI,GAAG,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;IACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/D;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAND,gCAMC;AAED,eAAsB,GAAa;IACjC,MAAM,GAAG,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACzC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACb,OAAO,GAAG,CAAC;AACb,CAAC;AAJD,sBAIC;AAED,MAAM,OAAO,GAAG,CAAC,EAAE,CAAC;AACpB,mBAA0B,GAAG;IAC3B,+CAA+C;IAC/C,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACjC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC;AAChC,CAAC;AAJD,8BAIC;AAED,aAAoB,KAAK;IACvB,OAAO,KAAK,CAAC,MAAM,CAAC,UAAS,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC;AAFD,kBAEC;AAED,eAAsB,KAAK;IACzB,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACb;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAND,sBAMC;AAED,qBAA4B,KAAK,EAAE,GAAG,EAAE,KAAK;IAC3C,+BAA+B;IAC/B,MAAM,KAAK,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;IAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC9B,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;KAC5B;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AARD,kCAQC;AAED;;;GAGG;AACH,aAAoB,CAAe;IACjC,IAAI,GAAG,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACrC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,GAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAC3D;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAND,kBAMC;AAED,mBAA0B,IAAoB,EAAE,IAAI,GAAC,KAAK,EAAE,QAAQ,GAAC,GAAG,EAAE,KAAK,GAAC,IAAI;IAClF,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IAC9B,MAAM,OAAO,GAAG,EAAE,CAAC;IACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC9B,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;KACvC;IACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;YACpD,MAAM,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;YACtD,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;SACxB;KACF;IACD,IAAI,KAAK,EAAE;QACT,IAAI,KAAK,GAAG,CAAC,EAAE;YACb,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;SAChD;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC9B,MAAM,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/B,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,GAAG,KAAK,CAAC,CAAC;aACzD;SACF;KACF;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AA3BD,8BA2BC;AAED,iBAAwB,EAAU;IAChC,OAAO,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAC,KAAK,CAAC,CAAC;AACzC,CAAC;AAFD,0BAEC;AAED,iBAAwB,GAAW;IACjC,OAAO,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5C,CAAC;AAFD,0BAEC;AAED,mBAAmB,IAAI,EAAE,IAAI,EAAE,EAAE;IAC/B,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,GAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC;AAED,mBAA0B,IAAoB;IAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC5C,MAAM,GAAG,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;IACrC,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IAC9B,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACjC;KACF;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAXD,8BAWC;AAED,2BAAkC,UAAkB,EAAE,IAAY;IAChE,OAAO,WAAW,CAAC,CAAC,EAAE,UAAU,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC;AAFD,8CAEC;AAED,2BAAkC,KAAa,EAAE,IAAY,EAAE,IAAY;IACzE,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;IAC7B,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;IAE7B,wEAAwE;IACxE,UAAU;IACV,MAAM,IAAI,GAAG,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;IAChD,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1C,OAAO,GAAG,CAAC;AACb,CAAC;AATD,8CASC;AAED,sBAA6B,GAAiB;IAC5C,MAAM,GAAG,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;KAC5B;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAND,oCAMC;AAED,uBAA8B,GAAiB,EAAE,IAAkB;IACjE,MAAM,GAAG,GAAG,EAAE,CAAC;IACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACxC;IACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SAC9B;KACF;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAXD,sCAWC;AAED,aAAoB,GAAiB,EAAE,KAAa;IAClD,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AAC1C,CAAC;AAFD,kBAEC;AAED,aAAoB,GAAG;IACrB,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC;AAFD,kBAEC;;;;;;;;;;;;;;AC9XD;;;;;;;;;;;;;;GAcG;;AAEH,MAAM,EAAE,GAAG,KAAK,CAAC;AACjB,MAAM,OAAO,GAAG,EAAE,GAAG,CAAC,CAAC;AAOvB,mBAA0B,CAAC,EAAE,MAAM;IACjC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;IAC9C,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;AAC9B,CAAC;AAHD,8BAGC;AAED,oBAA2B,CAAC,EAAE,MAAM;IAClC,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;IACzC,OAAO,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;AAChC,CAAC;AAHD,gCAGC;AAED,iBAAwB,OAAO,EAAE,MAAM;IACrC,4BAA4B;IAC5B,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACpD,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC;IAC9E,OAAO,MAAM,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AACxC,CAAC;AALD,0BAKC;AAED,wBAA+B,UAA0B,EAAE,MAAM;IAC/D,IAAI,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;IAC3B,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;IACjD,OAAO,OAAO,CAAC,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AACjD,CAAC;AAJD,wCAIC;AAED,yBAAgC,IAAI,EAAE,eAAe,EAAE,MAAM;IAC3D,8EAA8E;IAC9E,SAAS;IACT,OAAO,SAAS,CAAC,IAAI,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;AAClD,CAAC;AAJD,0CAIC;AASD,kCAAyC,IAAoB;IAC3D,2CAA2C;IAC3C,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAChD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IAC7B,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAEpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC9B,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;YACzC,GAAG,CAAC,SAAS,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC;YAC9C,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;YACvB,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC1B;KACF;IAED,uBAAuB;IACvB,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACvC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;IAC1C,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,oBAAoB,CAAC,CAAC,CAAC;IACpG,IAAI,CAAC,KAAK,EAAE,CAAC;AACf,CAAC;AAvBD,4DAuBC;AAED,mBAAmB,IAAI,EAAE,eAAe,EAAE,MAAM;IAC9C,IAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACxC,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC;IACvB,wCAAwC;IACxC,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,SAAS,EAAE;gBACxB,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;aACd;YACD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACzB;KACF;IACD,uDAAuD;IACvD,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK,GAAG,eAAe,GAAG,EAAE,CAAC,CAAC;IACtE,8CAA8C;IAC9C,MAAM,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,MAAM,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC;IAEvE,MAAM,IAAI,GAAG;QACX;YACE,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,IAAI;YACP,IAAI,EAAE,SAAsB;SAC7B;KACF,CAAC;IACF,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IAClC,OAAO,GAAG,CAAC;AACb,CAAC;AAED,gBAAgB,CAAe,EAAE,CAAe,EAAE,MAAM;IACtD,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC1C,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC;IACvB,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3C,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3C,MAAM,IAAI,GAAG,CAAC;YACZ,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,IAAI;SACR,CAAC;IACF,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IAC/B,OAAO,GAAG,CAAC;AACb,CAAC;AAED,iBAAiB,CAAe,EAAE,CAAiB,EAAE,MAAM,EAAE,OAAe;IAC1E,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC1C,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC;IACvB,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAE3C,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;QACvB,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7C,OAAO;YACL,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC;YACzB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC;SAC1B;IACH,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IAC/B,OAAO,GAAG,CAAC;AACb,CAAC;AAED,sBAA6B,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,SAAqB,EAAE;IACzE,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;IACnC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;IACnC,OAAO;QACL,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE;YACL,KAAK,EAAE,MAAM;YACb,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;SAC1B;QACD,KAAK,EAAE;YACL,KAAK,EAAE,MAAM;YACb,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;SAC1B;KACF,CAAC;AACJ,CAAC;AAdD,oCAcC;;;;;;;;;;;;;;AC/JD;;;;;;;;;;;;;;GAcG;;;;;;;;;;AAIH,0GAA2C;AAC3C,4HAAgE;AAQ/D,CAAC;AAEF,MAAM,QAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;AACpC;;;GAGG;AACH,+BAA+C,SAAQ,4BAAY;IAkBjE,YAAY,UAAsB,EAAE,YAA0B;QAC5D,KAAK,EAAE,CAAC;QAlBV,yCAAyC;QACzC,gBAAW,GAAmB,EAAE,CAAC;QAGjC,8BAA8B;QAC9B,gBAAW,GAAG,KAAK,CAAC;QASpB,+CAA+C;QAC/C,iBAAY,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAIlC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QAEjC,sEAAsE;QACtE,yEAAyE;QACzE,MAAM,WAAW,GAAG,YAAY,CAAC,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAC;QAClE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,UAAU,CAAC,SAAS,CAAC;YACjE,UAAU,CAAC,SAAS,CAAC,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,uDAAuD,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;IAC3F,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAEK,KAAK;;YACT,8BAA8B;YAC9B,MAAM,WAAW,GAAG,EAAC,KAAK,EAAE;oBAC1B,WAAW,EAAE;wBACX,sBAAsB,EAAE,OAAO;wBAC/B,qBAAqB,EAAE,OAAO;wBAC9B,sBAAsB,EAAE,OAAO;wBAC/B,oBAAoB,EAAE,OAAO;qBAC9B;iBACF,EAAG,KAAK,EAAE,KAAK,EAAC,CAAC;YAClB,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YACtE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YAErB,8CAA8C;YAC9C,MAAM,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,iBAAiB,CAAC;YACxD,IAAI,CAAC,WAAW,GAAG,IAAI,uCAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YACrE,MAAM,MAAM,GAAG,QAAQ,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;YACxD,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACjC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YAE/C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE;gBAChD,KAAK,IAAI,MAAM,IAAI,IAAI,EAAE;oBACvB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBAC/B;gBACD,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;gBAC5D,IAAI,SAAS,GAAG,CAAC,EAAE;oBACjB,2CAA2C;oBAC3C,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;oBAEtC,6CAA6C;oBAC7C,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;oBACjC,MAAM,OAAO,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;oBACjD,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;wBACrC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;wBACvC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;qBACzB;iBACF;YACH,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC;KAAA;IAED,IAAI;QACF,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE;YACzC,KAAK,CAAC,IAAI,EAAE,CAAC;SACd;QACD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;CACF;AArFD,4CAqFC;;;;;;;;;;;;;;ACvHD;;;;;;;;;;;;;;GAcG;;AAEH,oFAAsC;AACtC,uFAA4C;AAC5C,iIAAoE;AACpE,oFAIsB;AAEtB,MAAM,IAAI,GAAG,IAAI,CAAC;AAClB,MAAM,SAAS,GAAG,IAAI,CAAC;AACvB,MAAM,KAAK,GAAG,EAAE,CAAC;AAEjB,IAAI,WAAW,CAAC;AAChB,IAAI,OAAO,CAAC;AAEZ,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC7C,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACnD,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC/C,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;AACvD,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAE/C,4BAA4B,WAAwB;IAClD,kBAAkB,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC;AAED,4BAA4B,MAAoB;IAC9C,4BAA4B;IAC5B,kDAAkD;IAClD,WAAW,GAAG,MAAM,CAAC;IACrB,4BAA4B;IAC5B,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;IAErB,MAAM,OAAO,GAAG,sBAAS,CAAC,WAAW,EACnC,yBAAY,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC;IACvD,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAE3B,kCAAkC;IAClC,MAAM,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;IAC1E,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACpC,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACrC,MAAM,KAAK,GAAG,oBAAO,CAAC,WAAW,EAC/B,yBAAY,CAAC,kBAAkB,EAAE,gBAAgB,EAAE,YAAY,EAAE,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC,CAAC,CAAC;IACnF,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAEzB,8BAA8B;IAC9B,MAAM,aAAa,GAAG,OAAO,CAAC,mBAAmB,CAAC;QAChD,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,UAAU,CAAC,MAAM;QACvB,KAAK,EAAE,EAAE;KACV,CAAC,CAAC;IACH,MAAM,KAAK,GAAG,2BAAc,CAAC,aAAa,EACxC,yBAAY,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,SAAS,CAAC,CAAC,CAAC;IAC/D,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAEzB,uCAAuC;IACvC,MAAM,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE,EAAC,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC;IAC3E,MAAM,MAAM,GAAG,4BAAe,CAAC,YAAY,EAAE,SAAS,EACpD,yBAAY,CAAC,yBAAyB,EAAE,UAAU,EAAE,gBAAgB,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;IACvF,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAE1B,8CAA8C;IAC9C,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,WAAW,EAAE,EAAC,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;IAC3F,MAAM,SAAS,GAAG,4BAAe,CAAC,OAAO,EAAE,SAAS,EAClD,yBAAY,CAAC,wBAAwB,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC;IACjE,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AAC/B,CAAC;AAED;IACE,4BAA4B;IAC5B,oBAAU,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;AAC1D,CAAC;AAED,aAAa,GAAU;IACrB,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC;AACD,aAAa,GAAU;IACrB,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC;AAED,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAEtC,MAAM,UAAU,GAAG;IACjB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE,IAAI;IACf,SAAS,EAAE,GAAG;IACd,IAAI,EAAE,EAAE;IACR,KAAK,EAAE,GAAG;CACX,CAAC;AAEF,MAAM,YAAY,GAAG;IACnB,QAAQ,EAAE,CAAC;IACX,KAAK,EAAE,CAAC;CACT,CAAC;AAEF,MAAM,aAAa,GAAG,IAAI,mCAAyB,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;AAE9E,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE;IACrC,IAAI,aAAa,CAAC,WAAW,EAAE;QAC7B,aAAa,CAAC,IAAI,EAAE,CAAC;QACrB,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC;KAC/B;SAAM;QACL,aAAa,CAAC,KAAK,EAAE,CAAC;QACtB,aAAa,CAAC,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,EAAE;YACpC,MAAM,eAAe,GAAG,SAAS,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;YACxD,MAAM,SAAS,GAAG,4BAAe,CAAC,OAAO,EAAE,eAAe,EACxD,yBAAY,CAAC,wBAAwB,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC;YACjE,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;YACrB,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,SAAS,GAAG,gBAAgB,CAAC;KACvC;AACH,CAAC,CAAC,CAAC;AAEH,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE;IACvC,gCAAgC;IAChC,qCAAwB,CAAC,OAAO,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAS,CAAC;IAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACzB,MAAM,OAAO,GAAG,GAAG,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,oBAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE;IACnC,oBAAU,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC;AAEH,sBAAsB,KAAa;IACjC,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACtC,CAAC;;;;;;;;;;;;;;;ACnJD,0GAA2C;AAK1C,CAAC;AASF;;GAEG;AACH,wBAAgC,SAAQ,gBAAgB;IAItD,YAAY,OAAO,EAAE,MAAkB;QACrC,KAAK,CAAC,OAAO,EAAE,2BAA2B,CAAC,CAAC;QAH9C,YAAO,GAAG,IAAI,4BAAY,EAAE,CAAC;QAI3B,uDAAuD;QACvD,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEpD,gEAAgE;QAChE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAC,MAAM,EAAC,CAAC,CAAC;IAClC,CAAC;IAED,aAAa,CAAC,KAAK;QACjB,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;YACvB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,oBAAoB,IAAI,CAAC,MAAM,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;YAEpE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;SACxC;IACH,CAAC;CACF;AArBD,gDAqBC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","'use strict';\n\nfunction FFT(size) {\n  this.size = size | 0;\n  if (this.size <= 1 || (this.size & (this.size - 1)) !== 0)\n    throw new Error('FFT size must be a power of two and bigger than 1');\n\n  this._csize = size << 1;\n\n  // NOTE: Use of `var` is intentional for old V8 versions\n  var table = new Array(this.size * 2);\n  for (var i = 0; i < table.length; i += 2) {\n    const angle = Math.PI * i / this.size;\n    table[i] = Math.cos(angle);\n    table[i + 1] = -Math.sin(angle);\n  }\n  this.table = table;\n\n  // Find size's power of two\n  var power = 0;\n  for (var t = 1; this.size > t; t <<= 1)\n    power++;\n\n  // Calculate initial step's width:\n  //   * If we are full radix-4 - it is 2x smaller to give inital len=8\n  //   * Otherwise it is the same as `power` to give len=4\n  this._width = power % 2 === 0 ? power - 1 : power;\n\n  // Pre-compute bit-reversal patterns\n  this._bitrev = new Array(1 << this._width);\n  for (var j = 0; j < this._bitrev.length; j++) {\n    this._bitrev[j] = 0;\n    for (var shift = 0; shift < this._width; shift += 2) {\n      var revShift = this._width - shift - 2;\n      this._bitrev[j] |= ((j >>> shift) & 3) << revShift;\n    }\n  }\n\n  this._out = null;\n  this._data = null;\n  this._inv = 0;\n}\nmodule.exports = FFT;\n\nFFT.prototype.fromComplexArray = function fromComplexArray(complex, storage) {\n  var res = storage || new Array(complex.length >>> 1);\n  for (var i = 0; i < complex.length; i += 2)\n    res[i >>> 1] = complex[i];\n  return res;\n};\n\nFFT.prototype.createComplexArray = function createComplexArray() {\n  const res = new Array(this._csize);\n  for (var i = 0; i < res.length; i++)\n    res[i] = 0;\n  return res;\n};\n\nFFT.prototype.toComplexArray = function toComplexArray(input, storage) {\n  var res = storage || this.createComplexArray();\n  for (var i = 0; i < res.length; i += 2) {\n    res[i] = input[i >>> 1];\n    res[i + 1] = 0;\n  }\n  return res;\n};\n\nFFT.prototype.completeSpectrum = function completeSpectrum(spectrum) {\n  var size = this._csize;\n  var half = size >>> 1;\n  for (var i = 2; i < half; i += 2) {\n    spectrum[size - i] = spectrum[i];\n    spectrum[size - i + 1] = -spectrum[i + 1];\n  }\n};\n\nFFT.prototype.transform = function transform(out, data) {\n  if (out === data)\n    throw new Error('Input and output buffers must be different');\n\n  this._out = out;\n  this._data = data;\n  this._inv = 0;\n  this._transform4();\n  this._out = null;\n  this._data = null;\n};\n\nFFT.prototype.realTransform = function realTransform(out, data) {\n  if (out === data)\n    throw new Error('Input and output buffers must be different');\n\n  this._out = out;\n  this._data = data;\n  this._inv = 0;\n  this._realTransform4();\n  this._out = null;\n  this._data = null;\n};\n\nFFT.prototype.inverseTransform = function inverseTransform(out, data) {\n  if (out === data)\n    throw new Error('Input and output buffers must be different');\n\n  this._out = out;\n  this._data = data;\n  this._inv = 1;\n  this._transform4();\n  for (var i = 0; i < out.length; i++)\n    out[i] /= this.size;\n  this._out = null;\n  this._data = null;\n};\n\n// radix-4 implementation\n//\n// NOTE: Uses of `var` are intentional for older V8 version that do not\n// support both `let compound assignments` and `const phi`\nFFT.prototype._transform4 = function _transform4() {\n  var out = this._out;\n  var size = this._csize;\n\n  // Initial step (permute and transform)\n  var width = this._width;\n  var step = 1 << width;\n  var len = (size / step) << 1;\n\n  var outOff;\n  var t;\n  var bitrev = this._bitrev;\n  if (len === 4) {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform2(outOff, off, step);\n    }\n  } else {\n    // len === 8\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform4(outOff, off, step);\n    }\n  }\n\n  // Loop through steps in decreasing order\n  var inv = this._inv ? -1 : 1;\n  var table = this.table;\n  for (step >>= 2; step >= 2; step >>= 2) {\n    len = (size / step) << 1;\n    var quarterLen = len >>> 2;\n\n    // Loop through offsets in the data\n    for (outOff = 0; outOff < size; outOff += len) {\n      // Full case\n      var limit = outOff + quarterLen;\n      for (var i = outOff, k = 0; i < limit; i += 2, k += step) {\n        const A = i;\n        const B = A + quarterLen;\n        const C = B + quarterLen;\n        const D = C + quarterLen;\n\n        // Original values\n        const Ar = out[A];\n        const Ai = out[A + 1];\n        const Br = out[B];\n        const Bi = out[B + 1];\n        const Cr = out[C];\n        const Ci = out[C + 1];\n        const Dr = out[D];\n        const Di = out[D + 1];\n\n        // Middle values\n        const MAr = Ar;\n        const MAi = Ai;\n\n        const tableBr = table[k];\n        const tableBi = inv * table[k + 1];\n        const MBr = Br * tableBr - Bi * tableBi;\n        const MBi = Br * tableBi + Bi * tableBr;\n\n        const tableCr = table[2 * k];\n        const tableCi = inv * table[2 * k + 1];\n        const MCr = Cr * tableCr - Ci * tableCi;\n        const MCi = Cr * tableCi + Ci * tableCr;\n\n        const tableDr = table[3 * k];\n        const tableDi = inv * table[3 * k + 1];\n        const MDr = Dr * tableDr - Di * tableDi;\n        const MDi = Dr * tableDi + Di * tableDr;\n\n        // Pre-Final values\n        const T0r = MAr + MCr;\n        const T0i = MAi + MCi;\n        const T1r = MAr - MCr;\n        const T1i = MAi - MCi;\n        const T2r = MBr + MDr;\n        const T2i = MBi + MDi;\n        const T3r = inv * (MBr - MDr);\n        const T3i = inv * (MBi - MDi);\n\n        // Final values\n        const FAr = T0r + T2r;\n        const FAi = T0i + T2i;\n\n        const FCr = T0r - T2r;\n        const FCi = T0i - T2i;\n\n        const FBr = T1r + T3i;\n        const FBi = T1i - T3r;\n\n        const FDr = T1r - T3i;\n        const FDi = T1i + T3r;\n\n        out[A] = FAr;\n        out[A + 1] = FAi;\n        out[B] = FBr;\n        out[B + 1] = FBi;\n        out[C] = FCr;\n        out[C + 1] = FCi;\n        out[D] = FDr;\n        out[D + 1] = FDi;\n      }\n    }\n  }\n};\n\n// radix-2 implementation\n//\n// NOTE: Only called for len=4\nFFT.prototype._singleTransform2 = function _singleTransform2(outOff, off,\n                                                             step) {\n  const out = this._out;\n  const data = this._data;\n\n  const evenR = data[off];\n  const evenI = data[off + 1];\n  const oddR = data[off + step];\n  const oddI = data[off + step + 1];\n\n  const leftR = evenR + oddR;\n  const leftI = evenI + oddI;\n  const rightR = evenR - oddR;\n  const rightI = evenI - oddI;\n\n  out[outOff] = leftR;\n  out[outOff + 1] = leftI;\n  out[outOff + 2] = rightR;\n  out[outOff + 3] = rightI;\n};\n\n// radix-4\n//\n// NOTE: Only called for len=8\nFFT.prototype._singleTransform4 = function _singleTransform4(outOff, off,\n                                                             step) {\n  const out = this._out;\n  const data = this._data;\n  const inv = this._inv ? -1 : 1;\n  const step2 = step * 2;\n  const step3 = step * 3;\n\n  // Original values\n  const Ar = data[off];\n  const Ai = data[off + 1];\n  const Br = data[off + step];\n  const Bi = data[off + step + 1];\n  const Cr = data[off + step2];\n  const Ci = data[off + step2 + 1];\n  const Dr = data[off + step3];\n  const Di = data[off + step3 + 1];\n\n  // Pre-Final values\n  const T0r = Ar + Cr;\n  const T0i = Ai + Ci;\n  const T1r = Ar - Cr;\n  const T1i = Ai - Ci;\n  const T2r = Br + Dr;\n  const T2i = Bi + Di;\n  const T3r = inv * (Br - Dr);\n  const T3i = inv * (Bi - Di);\n\n  // Final values\n  const FAr = T0r + T2r;\n  const FAi = T0i + T2i;\n\n  const FBr = T1r + T3i;\n  const FBi = T1i - T3r;\n\n  const FCr = T0r - T2r;\n  const FCi = T0i - T2i;\n\n  const FDr = T1r - T3i;\n  const FDi = T1i + T3r;\n\n  out[outOff] = FAr;\n  out[outOff + 1] = FAi;\n  out[outOff + 2] = FBr;\n  out[outOff + 3] = FBi;\n  out[outOff + 4] = FCr;\n  out[outOff + 5] = FCi;\n  out[outOff + 6] = FDr;\n  out[outOff + 7] = FDi;\n};\n\n// Real input radix-4 implementation\nFFT.prototype._realTransform4 = function _realTransform4() {\n  var out = this._out;\n  var size = this._csize;\n\n  // Initial step (permute and transform)\n  var width = this._width;\n  var step = 1 << width;\n  var len = (size / step) << 1;\n\n  var outOff;\n  var t;\n  var bitrev = this._bitrev;\n  if (len === 4) {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleRealTransform2(outOff, off >>> 1, step >>> 1);\n    }\n  } else {\n    // len === 8\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleRealTransform4(outOff, off >>> 1, step >>> 1);\n    }\n  }\n\n  // Loop through steps in decreasing order\n  var inv = this._inv ? -1 : 1;\n  var table = this.table;\n  for (step >>= 2; step >= 2; step >>= 2) {\n    len = (size / step) << 1;\n    var halfLen = len >>> 1;\n    var quarterLen = halfLen >>> 1;\n    var hquarterLen = quarterLen >>> 1;\n\n    // Loop through offsets in the data\n    for (outOff = 0; outOff < size; outOff += len) {\n      for (var i = 0, k = 0; i <= hquarterLen; i += 2, k += step) {\n        var A = outOff + i;\n        var B = A + quarterLen;\n        var C = B + quarterLen;\n        var D = C + quarterLen;\n\n        // Original values\n        var Ar = out[A];\n        var Ai = out[A + 1];\n        var Br = out[B];\n        var Bi = out[B + 1];\n        var Cr = out[C];\n        var Ci = out[C + 1];\n        var Dr = out[D];\n        var Di = out[D + 1];\n\n        // Middle values\n        var MAr = Ar;\n        var MAi = Ai;\n\n        var tableBr = table[k];\n        var tableBi = inv * table[k + 1];\n        var MBr = Br * tableBr - Bi * tableBi;\n        var MBi = Br * tableBi + Bi * tableBr;\n\n        var tableCr = table[2 * k];\n        var tableCi = inv * table[2 * k + 1];\n        var MCr = Cr * tableCr - Ci * tableCi;\n        var MCi = Cr * tableCi + Ci * tableCr;\n\n        var tableDr = table[3 * k];\n        var tableDi = inv * table[3 * k + 1];\n        var MDr = Dr * tableDr - Di * tableDi;\n        var MDi = Dr * tableDi + Di * tableDr;\n\n        // Pre-Final values\n        var T0r = MAr + MCr;\n        var T0i = MAi + MCi;\n        var T1r = MAr - MCr;\n        var T1i = MAi - MCi;\n        var T2r = MBr + MDr;\n        var T2i = MBi + MDi;\n        var T3r = inv * (MBr - MDr);\n        var T3i = inv * (MBi - MDi);\n\n        // Final values\n        var FAr = T0r + T2r;\n        var FAi = T0i + T2i;\n\n        var FBr = T1r + T3i;\n        var FBi = T1i - T3r;\n\n        out[A] = FAr;\n        out[A + 1] = FAi;\n        out[B] = FBr;\n        out[B + 1] = FBi;\n\n        // Output final middle point\n        if (i === 0) {\n          var FCr = T0r - T2r;\n          var FCi = T0i - T2i;\n          out[C] = FCr;\n          out[C + 1] = FCi;\n          continue;\n        }\n\n        // Do not overwrite ourselves\n        if (i === hquarterLen)\n          continue;\n\n        // In the flipped case:\n        // MAi = -MAi\n        // MBr=-MBi, MBi=-MBr\n        // MCr=-MCr\n        // MDr=MDi, MDi=MDr\n        var ST0r = T1r;\n        var ST0i = -T1i;\n        var ST1r = T0r;\n        var ST1i = -T0i;\n        var ST2r = -inv * T3i;\n        var ST2i = -inv * T3r;\n        var ST3r = -inv * T2i;\n        var ST3i = -inv * T2r;\n\n        var SFAr = ST0r + ST2r;\n        var SFAi = ST0i + ST2i;\n\n        var SFBr = ST1r + ST3i;\n        var SFBi = ST1i - ST3r;\n\n        var SA = outOff + quarterLen - i;\n        var SB = outOff + halfLen - i;\n\n        out[SA] = SFAr;\n        out[SA + 1] = SFAi;\n        out[SB] = SFBr;\n        out[SB + 1] = SFBi;\n      }\n    }\n  }\n};\n\n// radix-2 implementation\n//\n// NOTE: Only called for len=4\nFFT.prototype._singleRealTransform2 = function _singleRealTransform2(outOff,\n                                                                     off,\n                                                                     step) {\n  const out = this._out;\n  const data = this._data;\n\n  const evenR = data[off];\n  const oddR = data[off + step];\n\n  const leftR = evenR + oddR;\n  const rightR = evenR - oddR;\n\n  out[outOff] = leftR;\n  out[outOff + 1] = 0;\n  out[outOff + 2] = rightR;\n  out[outOff + 3] = 0;\n};\n\n// radix-4\n//\n// NOTE: Only called for len=8\nFFT.prototype._singleRealTransform4 = function _singleRealTransform4(outOff,\n                                                                     off,\n                                                                     step) {\n  const out = this._out;\n  const data = this._data;\n  const inv = this._inv ? -1 : 1;\n  const step2 = step * 2;\n  const step3 = step * 3;\n\n  // Original values\n  const Ar = data[off];\n  const Br = data[off + step];\n  const Cr = data[off + step2];\n  const Dr = data[off + step3];\n\n  // Pre-Final values\n  const T0r = Ar + Cr;\n  const T1r = Ar - Cr;\n  const T2r = Br + Dr;\n  const T3r = inv * (Br - Dr);\n\n  // Final values\n  const FAr = T0r + T2r;\n\n  const FBr = T1r;\n  const FBi = -T3r;\n\n  const FCr = T0r - T2r;\n\n  const FDr = T1r;\n  const FDi = T3r;\n\n  out[outOff] = FAr;\n  out[outOff + 1] = 0;\n  out[outOff + 2] = FBr;\n  out[outOff + 3] = FBi;\n  out[outOff + 4] = FCr;\n  out[outOff + 5] = 0;\n  out[outOff + 6] = FDr;\n  out[outOff + 7] = FDi;\n};\n","/**\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\nimport * as resampler from 'audio-resampler';\n\nconst SR = 44100;\n\nlet melFilterbank = null;\nlet context = null;\n\nexport default class AudioUtils {\n  static loadExampleBuffer() {\n    return AudioUtils.loadBuffer('assets/spoken_command_example.wav');\n  }\n\n  static loadSineBuffer() {\n    return AudioUtils.loadBuffer('assets/sine_100ms_example.wav');\n  }\n\n  static loadBuffer(url: string) {\n    if (!context) {\n      context = new AudioContext();\n    }\n\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      // Load an example of speech being spoken.\n      xhr.open('GET', url);\n      xhr.onload = () => {\n        context.decodeAudioData(xhr.response, buffer => {\n          resolve(buffer);\n        })\n      };\n      xhr.responseType = 'arraybuffer';\n      xhr.onerror = (err) => reject(err);\n      xhr.send();\n    });\n  }\n\n  static async loadBufferOffline(url: string) {\n    const offlineCtx = new OfflineAudioContext(1, 16000, 16000);\n    return fetch(url).then(body => body.arrayBuffer())\n      .then(buffer => offlineCtx.decodeAudioData(buffer));\n  }\n\n  /**\n   * Calculates the FFT for an array buffer. Output is an array.\n   */\n  static fft(y: Float32Array) {\n    const fftr = null;\n    const transform = fftr.forward(y);\n    fftr.dispose();\n    return transform;\n  }\n\n  /**\n   * Calculates the STFT, given a fft size, and a hop size. For example, if fft\n   * size is 2048 and hop size is 1024, there will be 50% overlap. Given those\n   * params, if the input sample has 4096 values, there would be 3 analysis\n   * frames: [0, 2048], [1024, 3072], [2048, 4096].\n   */\n  static stft(y: Float32Array, fftSize=2048, hopSize=fftSize) {\n    // Split the input buffer into sub-buffers of size fftSize.\n    const bufferCount = Math.floor((y.length - fftSize) / hopSize) + 1;\n    let matrix = range(bufferCount).map(x => new Float32Array(fftSize));\n    for (let i = 0; i < bufferCount; i++) {\n      const ind = i * hopSize;\n      const buffer = y.slice(ind, ind + fftSize);\n      // In the end, we will likely have an incomplete buffer, which we should\n      // just ignore.\n      if (buffer.length != fftSize) {\n        continue;\n      }\n\n      const win = AudioUtils.hannWindow(buffer.length);\n      const winBuffer = AudioUtils.applyWindow(buffer, win);\n      const fft = AudioUtils.fft(winBuffer);\n      // TODO: Understand why fft output is 2 larger than expected (eg. 1026\n      // rather than 1024).\n      matrix[i].set(fft.slice(0, fftSize));\n    }\n    return matrix;\n  }\n\n  /**\n   * Given STFT energies, calculates the mel spectrogram.\n   */\n  static melSpectrogram(stftEnergies: Float32Array[],\n    melCount=20, lowHz=300, highHz=8000, sr=SR) {\n    this.lazyCreateMelFilterbank(stftEnergies[0].length, melCount, lowHz, highHz, sr);\n\n    // For each fft slice, calculate the corresponding mel values.\n    const out = [];\n    for (let i = 0; i < stftEnergies.length; i++) {\n      out[i] = AudioUtils.applyFilterbank(stftEnergies[i], melFilterbank);\n    }\n    return out;\n  }\n\n  static lazyCreateMelFilterbank(length: number, melCount=20, lowHz=300, highHz=8000, sr=SR) {\n    // Lazy-create a Mel filterbank.\n    if (!melFilterbank || melFilterbank.length != length) {\n      melFilterbank = this.createMelFilterbank(length, melCount, lowHz, highHz, sr);\n    }\n  }\n\n  /**\n   * Given an interlaced complex array (y_i is real, y_(i+1) is imaginary),\n   * calculates the magnitudes. Output is half the size.\n   */\n  static fftMags(y: Float32Array) {\n    let out = new Float32Array(y.length / 2);\n    for (let i = 0; i < y.length / 2; i++) {\n      out[i] = Math.hypot(y[i*2], y[i*2 + 1]);\n    }\n    return out;\n  }\n\n  /**\n   * Given an interlaced complex array (y_i is real, y_(i+1) is imaginary),\n   * calculates the energies. Output is half the size.\n   */\n  static fftEnergies(y: Float32Array) {\n    let out = new Float32Array(y.length / 2);\n    for (let i = 0; i < y.length / 2; i++) {\n      out[i] = y[i*2]*y[i*2] + y[i*2 + 1]*y[i*2 + 1];\n    }\n    return out;\n  }\n\n  /**\n   * Generates a Hann window of a given length.\n   */\n  static hannWindow(length: number) {\n    let win = new Float32Array(length);\n    for (let i = 0; i < length; i++) {\n      win[i] = 0.5 * (1 - Math.cos(2 * Math.PI * i / (length - 1)));\n    }\n    return win;\n  }\n\n  /**\n   * Applies a window to a buffer (point-wise multiplication).\n   */\n  static applyWindow(buffer, win) {\n    if (buffer.length != win.length) {\n      console.error(`Buffer length ${buffer.length} != window length\n        ${win.length}.`);\n      return;\n    }\n\n    let out = new Float32Array(buffer.length);\n    for (let i = 0; i < buffer.length; i++) {\n      out[i] = win[i] * buffer[i];\n    }\n    return out;\n  }\n\n  static pointWiseMultiply(out: Float32Array,\n    array1: Float32Array, array2: Float32Array) {\n    if (out.length != array1.length || array1.length != array2.length) {\n      console.error(`Output length ${out.length} != array1 length\n        ${array1.length} != array2 length ${array2.length}.`);\n      return;\n    }\n    for (let i = 0; i < out.length; i++) {\n      out[i] = array1[i] * array2[i];\n    }\n    return out;\n  }\n\n  static createMelFilterbank(fftSize, melCount=20, lowHz=300, highHz=8000, sr=SR) {\n    const lowMel = this.hzToMel(lowHz);\n    const highMel = this.hzToMel(highHz);\n\n    // Construct linearly spaced array of melCount intervals, between lowMel and\n    // highMel.\n    const mels = linearSpace(lowMel, highMel, melCount + 2);\n    // Convert from mels to hz.\n    const hzs = mels.map(mel => this.melToHz(mel));\n    // Go from hz to the corresponding bin in the FFT.\n    const bins = hzs.map(hz => this.freqToBin(hz, fftSize));\n\n    // Now that we have the start and end frequencies, create each triangular\n    // window (each value in [0, 1]) that we will apply to an FFT later. These\n    // are mostly sparse, except for the values of the triangle\n    const length = bins.length - 2;\n    const filters = [];\n    for (let i = 0; i < length; i++) {\n      // Now generate the triangles themselves.\n      filters[i] = this.triangleWindow(fftSize, bins[i], bins[i+1], bins[i+2]);\n    }\n\n    return filters;\n  }\n\n  /**\n   * Given an array of FFT magnitudes, apply a filterbank. Output should be an\n   * array with size |filterbank|.\n   */\n  static applyFilterbank(fftEnergies: Float32Array, filterbank: Float32Array[])\n    : Float32Array {\n    if (fftEnergies.length != filterbank[0].length) {\n      console.error(`Each entry in filterbank should have dimensions matching\n        FFT. |FFT| = ${fftEnergies.length}, |filterbank[0]| = ${filterbank[0].length}.`);\n      return;\n    }\n\n    // Apply each filter to the whole FFT signal to get one value.\n    let out = new Float32Array(filterbank.length);\n    for (let i = 0; i < filterbank.length; i++) {\n      // To calculate filterbank energies we multiply each filterbank with the\n      // power spectrum.\n      const win = AudioUtils.applyWindow(fftEnergies, filterbank[i]);\n      // Then add up the coefficents, and take the log.\n      out[i] = logGtZero(sum(win));\n    }\n    return out;\n  }\n\n  static hzToMel(hz) {\n    return 1125 * Math.log(1 + hz/700);\n  }\n\n  static melToHz(mel) {\n    return 700 * (Math.exp(mel/1125) - 1);\n  }\n\n  static freqToBin(freq, fftSize, sr=SR) {\n    return Math.floor((fftSize+1) * freq / (sr/2));\n  }\n\n  /**\n   * Creates a triangular window.\n   */\n  static triangleWindow(length, startIndex, peakIndex, endIndex) {\n    const win = new Float32Array(length);\n    const deltaUp = 1.0 / (peakIndex - startIndex);\n    for (let i = startIndex; i < peakIndex; i++) {\n      // Linear ramp up between start and peak index (values from 0 to 1).\n      win[i] = (i - startIndex) * deltaUp;\n    }\n    const deltaDown = 1.0 / (endIndex - peakIndex);\n    for (let i = peakIndex; i < endIndex; i++) {\n      // Linear ramp down between peak and end index (values from 1 to 0).\n      win[i] = 1 - (i - peakIndex) * deltaDown;\n    }\n    return win;\n  }\n\n  static normalizeSpecInPlace(spec, normMin=0, normMax=1) {\n    let min = Infinity;\n    let max = -Infinity;\n    const times = spec.length;\n    const freqs = spec[0].length;\n    for (let i = 0; i < times; i++) {\n      for (let j = 0; j < freqs; j++) {\n        const val = spec[i][j];\n        if (val < min) {\n          min = val;\n        }\n        if (val > max) {\n          max = val;\n        }\n      }\n    }\n\n    const scale = (normMax - normMin) / (max - min);\n    const offset = normMin - min;\n    for (let i = 0; i < times; i++) {\n      for (let j = 0; j < freqs; j++) {\n        // Get a normalized value in [0, 1].\n        const norm = (spec[i][j] - min) / (max - min);\n        // Then convert it to the desired range.\n        spec[i][j] = normMin + norm * (normMax - normMin);\n      }\n    }\n  }\n\n  static playbackArrayBuffer(buffer: Float32Array, sampleRate?: number) {\n    if (!context) {\n      context = new AudioContext();\n    }\n    if (!sampleRate) {\n      sampleRate = context.sampleRate;\n    }\n    const audioBuffer = context.createBuffer(1, buffer.length, sampleRate);\n    const audioBufferData = audioBuffer.getChannelData(0);\n    audioBufferData.set(buffer);\n\n    const source = context.createBufferSource();\n    source.buffer = audioBuffer;\n    source.connect(context.destination);\n    source.start();\n  }\n\n}\n\nfunction linearSpace(start, end, count) {\n  const delta = (end - start) / (count + 1);\n  let out = [];\n  for (let i = 0; i < count; i++) {\n    out[i] = start + delta * i;\n  }\n  return out;\n}\n\nfunction sum(array) {\n  return array.reduce(function(a, b) { return a + b; });\n}\n\nfunction range(count) : number[] {\n  let out = [];\n  for (let i = 0; i < count; i++) {\n    out.push(i);\n  }\n  return out;\n}\n\n// Use a lower minimum value for energy.\nconst MIN_VAL = -10;\nfunction logGtZero(val) {\n  // Ensure that the log argument is nonnegative.\n  const offset = Math.exp(MIN_VAL);\n  return Math.log(val + offset);\n}\n\nexport function resample(audioBuffer: AudioBuffer, targetSr: number) {\n  const sourceSr = audioBuffer.sampleRate;\n  const lengthRes = audioBuffer.length * targetSr/sourceSr;\n  const offlineCtx = new OfflineAudioContext(1, lengthRes, targetSr);\n\n  return new Promise((resolve, reject) => {\n    const bufferSource = offlineCtx.createBufferSource();\n    bufferSource.buffer = audioBuffer;\n    offlineCtx.oncomplete = function(event) {\n      const bufferRes = event.renderedBuffer;\n      const len = bufferRes.length;\n      //console.log(`Resampled buffer from ${audioBuffer.length} to ${len}.`);\n      resolve(bufferRes);\n    }\n    bufferSource.connect(offlineCtx.destination);\n    bufferSource.start();\n    offlineCtx.startRendering();\n  });\n}\n","import * as FFT from 'fft.js';\n\nexport interface SpecParams {\n  sampleRate: number;\n  hopLength?: number;\n  winLength?: number;\n  nFft?: number;\n  nMels?: number;\n  power?: number;\n  fMin?: number;\n  fMax?: number;\n}\n\ninterface MelParams {\n  sampleRate: number;\n  nFft?: number;\n  nMels?: number;\n  fMin?: number;\n  fMax?: number;\n}\n\n\nexport function magSpectrogram(stft: Float32Array[], power: number) : [Float32Array[], number] {\n  //console.log(`magSpectrogram on ${stft.length} x ${stft[0].length} power=${power}`);\n  const spec = stft.map(fft => pow(mag(fft), power));\n  const nFft = stft[0].length - 1;\n  return [spec, nFft];\n}\n\nexport function stft(y: Float32Array, params: SpecParams) : Float32Array[] {\n  const nFft = params.nFft || 2048;\n  const winLength = params.winLength || nFft;\n  const hopLength = params.hopLength || Math.floor(winLength / 4);\n\n  let fftWindow = hannWindow(winLength);\n\n  // Pad the window to be the size of nFft.\n  fftWindow = padCenterToLength(fftWindow, nFft);\n\n  // Pad the time series so that the frames are centered.\n  y = padReflect(y, Math.floor(nFft / 2));\n\n  // Window the time series.\n  const yFrames = frame(y, nFft, hopLength);\n  //console.log(`Split audio into ${yFrames.length} frames of ${yFrames[0].length} each.`);\n\n  // Pre-allocate the STFT matrix.\n  const stftMatrix = [];\n\n  const width = yFrames.length;\n  const height = nFft + 2;\n  //console.log(`Creating STFT matrix of size ${width} x ${height}.`);\n\n  for (let i = 0; i < width; i++) {\n    // Each column is a Float32Array of size height.\n    const col = new Float32Array(height);\n    stftMatrix[i] = col;\n  }\n\n  for (let i = 0; i < width; i++) {\n    // Populate the STFT matrix.\n    const winBuffer = applyWindow(yFrames[i], fftWindow);\n    const col = fft(winBuffer);\n    stftMatrix[i].set(col.slice(0, height));\n  }\n\n  return stftMatrix;\n}\n\nexport function spectrogram(y: Float32Array, params: SpecParams) : Float32Array[] {\n  if (!params.power) {\n    params.power = 1;\n  }\n  const stftMatrix = stft(y, params);\n  const [spec, nFft] = magSpectrogram(stftMatrix, params.power);\n  return spec;\n}\n\nexport function melSpectrogram(y: Float32Array, params: SpecParams) : Float32Array[] {\n  if (!params.power) {\n    params.power = 2.0;\n  }\n  const stftMatrix = stft(y, params);\n  const [spec, nFft] = magSpectrogram(stftMatrix, params.power);\n\n  params.nFft = nFft;\n  const melBasis = createMelFilterbank(params);\n  return applyWholeFilterbank(spec, melBasis);\n}\n\nexport function applyWholeFilterbank(spec: Float32Array[], filterbank: Float32Array[]) : Float32Array[]  {\n\n  // Apply a point-wise dot product between the array of arrays.\n  const out : Float32Array[] = [];\n  for (let i = 0; i < spec.length; i++) {\n    out[i] = applyFilterbank(spec[i], filterbank);\n  }\n  return out;\n}\n\nexport function applyFilterbank(mags: Float32Array, filterbank: Float32Array[]) : Float32Array {\n  if (mags.length != filterbank[0].length) {\n    throw new Error(`Each entry in filterbank should have dimensions ` +\n      `matching FFT. |mags| = ${mags.length}, ` +\n      `|filterbank[0]| = ${filterbank[0].length}.`);\n  }\n\n  // Apply each filter to the whole FFT signal to get one value.\n  let out = new Float32Array(filterbank.length);\n  for (let i = 0; i < filterbank.length; i++) {\n    // To calculate filterbank energies we multiply each filterbank with the\n    // power spectrum.\n    const win = applyWindow(mags, filterbank[i]);\n    // Then add up the coefficents.\n    out[i] = sum(win);\n  }\n  return out;\n}\n\nexport function applyWindow(buffer, win) {\n  if (buffer.length != win.length) {\n    console.error(`Buffer length ${buffer.length} != window length ${win.length}.`);\n    return;\n  }\n\n  let out = new Float32Array(buffer.length);\n  for (let i = 0; i < buffer.length; i++) {\n    out[i] = win[i] * buffer[i];\n  }\n  return out;\n}\n\nexport function padCenterToLength(data: Float32Array, length: number) {\n  // If data is longer than length, error!\n  if (data.length > length) {\n    throw new Error('Data is longer than length.');\n  }\n\n  const paddingLeft = Math.floor((length - data.length) / 2);\n  const paddingRight = length - data.length - paddingLeft;\n  return padConstant(data, [paddingLeft, paddingRight]);\n}\n\nexport function padConstant(data: Float32Array, padding: number | number[]) {\n  let padLeft, padRight;\n  if (typeof(padding) == 'object') {\n    [padLeft, padRight] = padding;\n  } else {\n    padLeft = padRight = padding;\n  }\n  const out = new Float32Array(data.length + padLeft + padRight);\n  out.set(data, padLeft);\n  return out;\n}\n\nexport function padReflect(data: Float32Array, padding: number) {\n  const out = padConstant(data, padding);\n  for (let i = 0; i < padding; i++) {\n    // Pad the beginning with reflected values.\n    out[i] = out[2*padding - i];\n    // Pad the end with reflected values.\n    out[out.length - i - 1] = out[out.length - 2*padding + i - 1];\n  }\n  return out;\n}\n\n/**\n * Given a timeseries, returns an array of timeseries that are windowed\n * according to the params specified.\n */\nexport function frame(data: Float32Array, frameLength: number, hopLength: number) : Float32Array[] {\n  const bufferCount = Math.floor((data.length - frameLength) / hopLength) + 1;\n  let buffers = range(bufferCount).map(x => new Float32Array(frameLength));\n  for (let i = 0; i < bufferCount; i++) {\n    const ind = i * hopLength;\n    const buffer = data.slice(ind, ind + frameLength);\n    buffers[i].set(buffer);\n    // In the end, we will likely have an incomplete buffer, which we should\n    // just ignore.\n    if (buffer.length != frameLength) {\n      continue;\n    }\n  }\n  return buffers;\n}\n\nexport function createMelFilterbank(params: MelParams) : Float32Array[] {\n  const fMin = params.fMin || 0;\n  const fMax = params.fMax || params.sampleRate / 2;\n  const nMels = params.nMels || 128;\n  const nFft = params.nFft || 2048;\n\n  // Center freqs of each FFT band.\n  const fftFreqs = calculateFftFreqs(params.sampleRate, nFft);\n  // (Pseudo) center freqs of each Mel band.\n  const melFreqs = calculateMelFreqs(nMels + 2, fMin, fMax);\n\n  const melDiff = internalDiff(melFreqs);\n  const ramps = outerSubtract(melFreqs, fftFreqs);\n  const filterSize = ramps[0].length;\n\n  const weights = [];\n  for (let i = 0; i < nMels; i++) {\n    weights[i] = new Float32Array(filterSize);\n    for (let j = 0; j < ramps[i].length; j++) {\n      const lower = -ramps[i][j] / melDiff[i];\n      const upper = ramps[i+2][j] / melDiff[i+1];\n      const weight = Math.max(0, Math.min(lower, upper));\n      weights[i][j] = weight;\n    }\n  }\n\n  // Slaney-style mel is scaled to be approx constant energy per channel.\n  for (let i = 0; i < weights.length; i++) {\n    // How much energy per channel.\n    const enorm = 2.0 / (melFreqs[2+i] - melFreqs[i]);\n    // Normalize by that amount.\n    weights[i] = weights[i].map(val => val * enorm);\n  }\n\n  return weights;\n}\n\nexport function fft(y: Float32Array) {\n  const fft = new FFT(y.length);\n  const out = fft.createComplexArray();\n  const data = fft.toComplexArray(y);\n  fft.transform(out, data);\n  return out;\n}\n\nexport function hannWindow(length: number) {\n  let win = new Float32Array(length);\n  for (let i = 0; i < length; i++) {\n    win[i] = 0.5 * (1 - Math.cos(2 * Math.PI * i / (length - 1)));\n  }\n  return win;\n}\n\nexport function array(arr: number[]) {\n  const out = new Float32Array(arr.length);\n  out.set(arr);\n  return out;\n}\n\nconst MIN_VAL = -10;\nexport function logGtZero(val) {\n  // Ensure that the log argument is nonnegative.\n  const offset = Math.exp(MIN_VAL);\n  return Math.log(val + offset);\n}\n\nexport function sum(array) {\n  return array.reduce(function(a, b) { return a + b; });\n}\n\nexport function range(count) : number[] {\n  let out = [];\n  for (let i = 0; i < count; i++) {\n    out.push(i);\n  }\n  return out;\n}\n\nexport function linearSpace(start, end, count) {\n  // Include start and endpoints.\n  const delta = (end - start) / (count - 1);\n  let out = new Float32Array(count);\n  for (let i = 0; i < count; i++) {\n    out[i] = start + delta * i;\n  }\n  return out;\n}\n\n/**\n * Given an interlaced complex array (y_i is real, y_(i+1) is imaginary),\n * calculates the energies. Output is half the size.\n */\nexport function mag(y: Float32Array) {\n  let out = new Float32Array(y.length / 2);\n  for (let i = 0; i < y.length / 2; i++) {\n    out[i] = Math.sqrt(y[i*2]*y[i*2] + y[i*2 + 1]*y[i*2 + 1]);\n  }\n  return out;\n}\n\nexport function powerToDb(spec: Float32Array[], amin=1e-10, refValue=1.0, topDb=80.0) {\n  const width = spec.length;\n  const height = spec[0].length;\n  const logSpec = [];\n  for (let i = 0; i < width; i++) {\n    logSpec[i] = new Float32Array(height);\n  }\n  for (let i = 0; i < width; i++) {\n    for (let j = 0; j < height; j++) {\n      const val = spec[i][j];\n      let logVal = 10.0 * Math.log10(Math.max(amin, val));\n      logVal -= 10.0 * Math.log10(Math.max(amin, refValue));\n      logSpec[i][j] = logVal;\n    }\n  }\n  if (topDb) {\n    if (topDb < 0) {\n      throw new Error(`topDb must be non-negative.`);\n    }\n    for (let i = 0; i < width; i++) {\n      const maxVal = max(logSpec[i]);\n      for (let j = 0; j < height; j++) {\n        logSpec[i][j] = Math.max(logSpec[i][j], maxVal - topDb);\n      }\n    }\n  }\n  return logSpec;\n}\n\nexport function hzToMel(hz: number) : number {\n  return 1125.0 * Math.log(1 + hz/700.0);\n}\n\nexport function melToHz(mel: number) : number {\n  return 700.0 * (Math.exp(mel/1125.0) - 1);\n}\n\nfunction freqToBin(freq, nFft, sr) {\n  return Math.floor((nFft+1) * freq / (sr/2));\n}\n\nexport function flatten2D(spec: Float32Array[]) {\n  const length = spec[0].length * spec.length;\n  const out = new Float32Array(length);\n  const height = spec[0].length;\n  const width = spec.length;\n  for (let i = 0; i < width; i++) {\n    for (let j = 0; j < height; j++) {\n      out[j * width + i] = spec[i][j];\n    }\n  }\n  return out;\n}\n\nexport function calculateFftFreqs(sampleRate: number, nFft: number) {\n  return linearSpace(0, sampleRate / 2, Math.floor(1 + nFft / 2));\n}\n\nexport function calculateMelFreqs(nMels: number, fMin: number, fMax: number) : Float32Array {\n  const melMin = hzToMel(fMin);\n  const melMax = hzToMel(fMax);\n\n  // Construct linearly spaced array of nMel intervals, between melMin and\n  // melMax.\n  const mels = linearSpace(melMin, melMax, nMels);\n  const hzs = mels.map(mel => melToHz(mel));\n  return hzs;\n}\n\nexport function internalDiff(arr: Float32Array) : Float32Array {\n  const out = new Float32Array(arr.length - 1);\n  for (let i = 0; i < arr.length; i++) {\n    out[i] = arr[i+1] - arr[i];\n  }\n  return out;\n}\n\nexport function outerSubtract(arr: Float32Array, arr2: Float32Array) : Float32Array[] {\n  const out = [];\n  for (let i = 0; i < arr.length; i++) {\n    out[i] = new Float32Array(arr2.length);\n  }\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr2.length; j++) {\n      out[i][j] = arr[i] - arr2[j];\n    }\n  }\n  return out;\n}\n\nexport function pow(arr: Float32Array, power: number) {\n  return arr.map(v => Math.pow(v, power));\n}\n\nexport function max(arr) {\n  return arr.reduce((a, b) => Math.max(a, b));\n}\n\n","/**\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nconst sr = 44100;\nconst nyquist = sr / 2;\n\ninterface LayoutParams {\n  logX?: boolean\n  logY?: boolean\n}\n\nexport function plotAudio(y, layout) {\n  let t = y.map((value, index) => (index / sr));\n  return plotXY(t, y, layout);\n}\n\nexport function plotCoeffs(y, layout) {\n  let ind = y.map((value, index) => index);\n  return plotXY(ind, y, layout);\n}\n\nexport function plotFFT(fftMags, layout) {\n  // Convert magnitudes to dB.\n  const dbs = fftMags.map(val => 20 * Math.log10(val))\n  const times = fftMags.map((value, index) => index / fftMags.length * nyquist);\n  return plotXY(times, fftMags, layout);\n}\n\nexport function plotFilterbank(filterbank: Float32Array[], layout) {\n  let filter = filterbank[0];\n  const inds = filter.map((value, index) => index);\n  return plotXYs(inds, filterbank, layout, 8000);\n}\n\nexport function plotSpectrogram(spec, samplesPerSlice, layout) {\n  // The STFT as given is an Float32Array[]. We need to render that matrix as an\n  // image.\n  return plotImage(spec, samplesPerSlice, layout);\n}\n\n/**\n * Download the spectrogram as an image.\n */\ninterface SpecParams {\n  samplesPerSlice: number\n}\n\nexport function downloadSpectrogramImage(spec: Float32Array[]) {\n  // Render the spectrogram into a 2D canvas.\n  const canvas = document.createElement('canvas');\n  const times = spec.length;\n  const freqs = spec[0].length;\n  canvas.width = times;\n  canvas.height = freqs;\n  const ctx = canvas.getContext('2d');\n\n  for (let i = 0; i < times; i++) {\n    for (let j = 0; j < freqs; j++) {\n      const val = Math.floor(spec[i][j] * 255);\n      ctx.fillStyle = `rgb(${val}, ${val}, ${val})`;\n      ctx.strokeStyle = null;\n      ctx.fillRect(i, j, 1, 1);\n    }\n  }\n\n  // Download the canvas.\n  var link = document.createElement('a');\n  link.setAttribute('download', 'spec.png');\n  link.setAttribute('href', canvas.toDataURL('image/png').replace('image/png', 'image/octet-stream'));\n  link.click();\n}\n\nfunction plotImage(stft, samplesPerSlice, layout) {\n  let out = document.createElement('div');\n  out.className = 'plot';\n  // Transpose the spectrogram we pass in.\n  let zArr = [];\n  for (let i = 0; i < stft.length; i++) {\n    for (let j = 0; j < stft[0].length; j++) {\n      if (zArr[j] == undefined) {\n        zArr[j] = [];\n      }\n      zArr[j][i] = stft[i][j];\n    }\n  }\n  // Calculate the X values (times) from the stft params.\n  const xArr = stft.map((value, index) => index * samplesPerSlice / sr);\n  // Calculate Y values (frequencies) from stft.\n  const fft = Array.prototype.slice.call(stft[0]);\n  const yArr = fft.map((value, index) => (index / fft.length) * nyquist);\n\n  const data = [\n    {\n      x: xArr,\n      y: yArr,\n      z: zArr,\n      type: 'heatmap' as 'heatmap'\n    }\n  ];\n  Plotly.newPlot(out, data, layout);\n  return out;\n}\n\nfunction plotXY(x: Float32Array, y: Float32Array, layout) {\n  const out = document.createElement('div');\n  out.className = 'plot';\n  const xArr = Array.prototype.slice.call(x);\n  const yArr = Array.prototype.slice.call(y);\n  const data = [{\n    x: xArr,\n    y: yArr,\n  }]\n  Plotly.plot(out, data, layout);\n  return out;\n}\n\nfunction plotXYs(x: Float32Array, y: Float32Array[], layout, maxFreq: number) {\n  const out = document.createElement('div');\n  out.className = 'plot';\n  const xArr = Array.prototype.slice.call(x);\n\n  const data = y.map(y_i => {\n    const yArr = Array.prototype.slice.call(y_i);\n    return {\n      x: xArr.slice(0, maxFreq),\n      y: yArr.slice(0, maxFreq),\n    }\n  });\n  Plotly.plot(out, data, layout);\n  return out;\n}\n\nexport function createLayout(title, xTitle, yTitle, params: LayoutParams={}) {\n  const logY = (params.logY == true);\n  const logX = (params.logX == true);\n  return {\n    title: title,\n    xaxis: {\n      title: xTitle,\n      type: logX ? 'log' : null,\n    },\n    yaxis: {\n      title: yTitle,\n      type: logY ? 'log' : null,\n    }\n  };\n}\n\n","/**\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport AudioUtils from './AudioUtils';\nimport CircularAudioBuffer from './CircularAudioBuffer';\nimport {EventEmitter} from 'eventemitter3';\nimport {MelSpectrogramNode} from './worklet/MelSpectrogramNode';\nimport {SpecParams} from './MelSpectrogram';\n\ninterface StreamParams {\n  // How long (in seconds) each spectrogram chunk needs to be.\n  duration: number;\n  // How often (in seconds) to emit a new spectrogram.\n  delay: number;\n};\n\nconst audioCtx = new AudioContext();\n/**\n * Opens an audio stream and extracts Mel spectrogram from it, suitable for\n * running inference in a TensorFlow.js environment.\n */\nexport default class StreamingFeatureExtractor extends EventEmitter {\n  // Where to store the latest spectrogram.\n  spectrogram: Float32Array[] = [];\n  // Number of spectrogram columns to store in total.\n  columnLength: number;\n  // Are we streaming right now?\n  isStreaming = false;\n  // The worklet node doing the feature extraction.\n  melSpecNode: MelSpectrogramNode;\n  // The active stream.\n  stream: MediaStream;\n  // Configuration for the spectrogram.\n  specParams: SpecParams;\n  // Configuration for the streaming.\n  streamParams: StreamParams;\n  // When was the last time we sent out features.\n  lastEmitTime = new Date().valueOf();\n\n  constructor(specParams: SpecParams, streamParams: StreamParams) {\n    super();\n    this.specParams = specParams;\n    this.streamParams = streamParams;\n\n    // Calculate how many columns to store in the spectrogram. Each column\n    // is spaced hopLength samples apart, and represents an FFT of winLength.\n    const specSamples = streamParams.duration * specParams.sampleRate;\n    this.columnLength = Math.floor((specSamples - specParams.hopLength) /\n      specParams.winLength);\n    console.log(`Created StreamingFeatureExtractor with columnLength ${this.columnLength}.`);\n  }\n\n  getSpectrogram() {\n    return this.spectrogram;\n  }\n\n  async start() {\n    // Open an audio input stream.\n    const constraints = {audio: {\n      \"mandatory\": {\n        \"googEchoCancellation\": \"false\",\n        \"googAutoGainControl\": \"false\",\n        \"googNoiseSuppression\": \"false\",\n        \"googHighpassFilter\": \"false\"\n      },\n    } , video: false};\n    const stream = await navigator.mediaDevices.getUserMedia(constraints);\n    this.stream = stream;\n\n    // Create a MelSpectrogramNode (AudioWorklet).\n    await audioCtx.audioWorklet.addModule('dist/worklet.js')\n    this.melSpecNode = new MelSpectrogramNode(audioCtx, this.specParams);\n    const source = audioCtx.createMediaStreamSource(stream);\n    source.connect(this.melSpecNode);\n    this.melSpecNode.connect(audioCtx.destination);\n\n    this.melSpecNode.emitter.on('spectrogram', spec => {\n      for (let column of spec) {\n        this.spectrogram.push(column);\n      }\n      let overLimit = this.spectrogram.length - this.columnLength;\n      if (overLimit > 0) {\n        // Remove the excess elements in the array.\n        this.spectrogram.splice(0, overLimit);\n\n        // The buffer is full, see if we should emit.\n        const now = new Date().valueOf();\n        const elapsed = (now - this.lastEmitTime) / 1000;\n        if (elapsed > this.streamParams.delay) {\n          this.emit('feature', this.spectrogram);\n          this.lastEmitTime = now;\n        }\n      }\n    });\n\n    this.isStreaming = true;\n  }\n\n  stop() {\n    for (let track of this.stream.getTracks()) {\n      track.stop();\n    }\n    this.melSpecNode.disconnect(audioCtx.destination);\n    this.stream = null;\n    this.isStreaming = false;\n  }\n}\n\n","/**\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport AudioUtils from './AudioUtils';\nimport * as melspec from './MelSpectrogram';\nimport StreamingFeatureExtractor from './StreamingFeatureExtractor';\nimport {\n  plotAudio, plotCoeffs, plotFFT, plotFilterbank, plotSpectrogram,\n  downloadSpectrogramImage,\n  createLayout\n} from './PlotGraphs';\n\nconst nFft = 2048;\nconst hopLength = 1024;\nconst nMels = 30;\n\nlet arrayBuffer;\nlet melSpec;\n\nconst outEl = document.querySelector('#out');\nconst streamEl = document.querySelector('#stream');\nconst loadEl = document.querySelector('#load');\nconst downloadEl = document.querySelector('#download');\nconst playEl = document.querySelector('#play');\n\nfunction analyzeAudioBuffer(audioBuffer: AudioBuffer) {\n  analyzeArrayBuffer(audioBuffer.getChannelData(0));\n}\n\nfunction analyzeArrayBuffer(buffer: Float32Array) {\n  //const start = 0.2 * 44100;\n  //arrayBuffer = buffer.slice(start, start + 1024);\n  arrayBuffer = buffer;\n  // Clear the output element.\n  outEl.innerHTML = '';\n\n  const audioEl = plotAudio(arrayBuffer,\n    createLayout('Time domain', 'time (s)', 'pressure'));\n  outEl.appendChild(audioEl);\n\n  // Calculate FFT from ArrayBuffer.\n  const bufferPow2 = arrayBuffer.slice(0, pow2LessThan(arrayBuffer.length));\n  const fft = melspec.fft(bufferPow2);\n  const fftEnergies = melspec.mag(fft);\n  const fftEl = plotFFT(fftEnergies,\n    createLayout('Frequency domain', 'frequency (Hz)', 'power (dB)', {logX: false}));\n  outEl.appendChild(fftEl);\n\n  // Calculate a Mel filterbank.\n  const melFilterbank = melspec.createMelFilterbank({\n    sampleRate: 44100,\n    nFft: bufferPow2.length,\n    nMels: 32,\n  });\n  const melEl = plotFilterbank(melFilterbank,\n    createLayout('Mel filterbank', 'frequency (Hz)', 'percent'));\n  outEl.appendChild(melEl);\n\n  // Calculate STFT from the ArrayBuffer.\n  const stftEnergies = melspec.spectrogram(arrayBuffer, {sampleRate: 44100});\n  const specEl = plotSpectrogram(stftEnergies, hopLength,\n    createLayout('STFT energy spectrogram', 'time (s)', 'frequency (Hz)', {logY: true}));\n  outEl.appendChild(specEl);\n\n  // Calculate mel energy spectrogram from STFT.\n  melSpec = melspec.melSpectrogram(arrayBuffer, {sampleRate: 44100, nMels, hopLength, nFft});\n  const melSpecEl = plotSpectrogram(melSpec, hopLength,\n    createLayout('Mel energy spectrogram', 'time (s)', 'mel bin'));\n  outEl.appendChild(melSpecEl);\n}\n\nfunction main() {\n  // Load a short sine buffer.\n  AudioUtils.loadExampleBuffer().then(analyzeAudioBuffer);\n}\n\nfunction min(arr: any[]) {\n  return arr.reduce((a, b) => Math.min(a, b));\n}\nfunction max(arr: any[]) {\n  return arr.reduce((a, b) => Math.max(a, b));\n}\n\nwindow.addEventListener('load', main);\n\nconst specParams = {\n  sampleRate: 16000,\n  winLength: 2048,\n  hopLength: 512,\n  fMin: 30,\n  nMels: 229\n};\n\nconst streamParams = {\n  duration: 2,\n  delay: 1,\n};\n\nconst streamFeature = new StreamingFeatureExtractor(specParams, streamParams);\n\nstreamEl.addEventListener('click', e => {\n  if (streamFeature.isStreaming) {\n    streamFeature.stop();\n    streamEl.innerHTML = 'Stream';\n  } else {\n    streamFeature.start();\n    streamFeature.on('feature', melSpec => {\n      const nativeHopLength = hopLength * (44100.0 / 16000.0);\n      const melSpecEl = plotSpectrogram(melSpec, nativeHopLength,\n        createLayout('Mel energy spectrogram', 'time (s)', 'mel bin'));\n      outEl.innerHTML = '';\n      outEl.appendChild(melSpecEl);\n    });\n    streamEl.innerHTML = 'Stop streaming';\n  }\n});\n\ndownloadEl.addEventListener('click', e => {\n  // Download the mel spectrogram.\n  downloadSpectrogramImage(melSpec);\n});\n\nloadEl.addEventListener('change', function(e) {\n  const files = this.files;\n  const fileUrl = URL.createObjectURL(files[0]);\n  AudioUtils.loadBuffer(fileUrl).then(analyzeAudioBuffer);\n});\n\nplayEl.addEventListener('click', e => {\n  AudioUtils.playbackArrayBuffer(arrayBuffer);\n});\n\nfunction pow2LessThan(value: number) {\n  const exp = Math.log2(value);\n  return Math.pow(2, Math.floor(exp));\n}\n","import {SpecParams} from '../MelSpectrogram';\nimport {EventEmitter} from 'eventemitter3';\n\ndeclare class AudioWorkletPort {\n  onmessage(callback: (message: string) => void): void;\n  postMessage(data: any): void;\n};\n\n\ndeclare class AudioWorkletNode extends AudioNode {\n  constructor(context: AudioContext, name: string);\n\n  port: AudioWorkletPort;\n}\n\n/**\n * MelSpectrogramNode.\n */\nexport class MelSpectrogramNode extends AudioWorkletNode {\n\n  emitter = new EventEmitter();\n\n  constructor(context, config: SpecParams) {\n    super(context, 'mel-spectrogram-processor');\n    // Listen to messages from the MelSpectrogramProcessor.\n    this.port.onmessage = this.handleMessage.bind(this);\n\n    // Send configuration parameters to the MelSpectrogramProcessor.\n    this.port.postMessage({config});\n  }\n\n  handleMessage(event) {\n    if (event.data.features) {\n      const spec = event.data.features;\n      console.log(`Mel spec of size ${spec.length} x ${spec[0].length}.`);\n\n      this.emitter.emit('spectrogram', spec);\n    }\n  }\n}\n\n"],"sourceRoot":""}